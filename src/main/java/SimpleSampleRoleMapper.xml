<?xml version="1.0" ?>
<!DOCTYPE MBeanType SYSTEM "commo.dtd">

<!-- MBean Definition File (MDF) for the Simple Sample Role Mapper.

     Copyright (c) 2002 by BEA Systems, Inc.  All Rights Reserved.
-->

<!-- Declare your mbean.

     Since it is for a role mapper, it must extend the
     weblogic.management.security.authorization.RoleMapper or
     weblogic.management.security.authorization.DeployableRoleMapper mbean.

     Since this sample supports webapp and EJB deployments, it
     extends the
     weblogic.management.security.authorization.DeployableRoleMapper mbean.

     Since this sample also supports application versioning, it implements
     the weblogic.management.security.ApplicationVersioner mbean.

     The Name and DisplayName must be the same.
     They specify the name that will appear on the
     console for this provider.

     Set the PeristPolicy to "OnUpdate" so that if an attribute
     value is changed, the new value is written to disk immediately.
     See the "Developing Security Services" manual for more info.

     Note that since this is an xml document, you can't use double
     quotes directly.  Instead you need to use &quot;

     Note that setting "Writeable" to "false" on an attribute
     makes the attribute read-only.  The default is read-write.
-->

<MBeanType
 Name          = "SimpleSampleRoleMapper"
 DisplayName   = "SimpleSampleRoleMapper"
 Package       = "examples.security.providers.roles.simple"
 Extends       = "weblogic.management.security.authorization.DeployableRoleMapper"
 Implements    = "weblogic.management.security.ApplicationVersioner"
 PersistPolicy = "OnUpdate"
>

 <!-- You must set the value of the ProviderClassName attribute
      (inherited from the weblogic.management.security.Provider mbean)
      to the name of the java class you wrote that implements the
      weblogic.security.spi.RoleProvider or
      weblogic.security.spi.DeployableRoleProvider interface.

      Since this sample supports webapp and EJB deployments, it implements
      the weblogic.security.spi.DeployableRoleProvider interface.

      You can think of the provider's mbean as the factory
      for your provider's runtime implementation.
 -->
 <MBeanAttribute
  Name          = "ProviderClassName"
  Type          = "java.lang.String"
  Writeable     = "false"
  Preprocessor = "weblogic.management.configuration.LegalHelper.checkClassName(value)"
  Default       = "&quot;examples.security.providers.roles.simple.SimpleSampleRoleMapperProviderImpl&quot;"
 />

 <!-- You must set the value of the Description attribute
      (inherited from the weblogic.management.security.Provider mbean)
      to a brief description of your provider.
      It is displayed in the console.
 -->
 <MBeanAttribute
  Name          = "Description"
  Type          = "java.lang.String"
  Writeable     = "false"
  Default       = "&quot;WebLogic Simple Sample Role Mapper Provider&quot;"
 />

 <!-- You must set the value of the Version attribute
      (inherited from the weblogic.management.security.Provider mbean)
      to your provider's version.  There is no required format.
 -->
 <MBeanAttribute
  Name          = "Version"
  Type          = "java.lang.String"
  Writeable     = "false"
  Default       = "&quot;1.0&quot;"
 />

 <!-- Add any custom attributes for your provider here.

      The simple sample role mapper does not have any custom attributes.

      Note: custom attributes do not appear in the
      console in WLS 7.0.  Use the admin command line tool
      (java weblogic.Admin) to view and set their values.

      Refer to the "Developing Security Services" manual
      for more info on defining custom attributes.
 -->

</MBeanType>
